language: python
python: 3.6
install: true

git:
  depth: false
  quiet: true

stages:
  - name: preflight
    if: type = pull_request
  - name: tests
    if: type = pull_request
  - name: images
    if: type = pull_request AND branch = master

jobs:
  include:
    - stage: preflight
      name: "Unit Tests"
      python: 3.6
      before_script: pip install tox-travis
      script: tox
    - stage: preflight
      services: docker
      name: "Images build"
      before_script:
        - cd deploy/images
        # Pulling image for layer caching
        - make -j 2 pull-base pull-inbox IMGTAG=latest
      script:
        - make -j 2
        - make -j 2 push-base push-inbox
    - stage: tests
      name: "Integration Tests"
      services: docker
      before_script:
        - pip3 install -r requirements.txt
        - git clone https://github.com/bats-core/bats-core.git
        - pushd bats-core && git checkout v1.1.0 && sudo ./install.sh /usr/local && popd
        - cd deploy
        - make -C images -j 2 pull-base pull-inbox
        - make prepare
        - make bootstrap ARGS="--keyserver ega"
        - sudo chown -R travis private
        - make up OMIT="--scale res=0"
        - make preflight-check
      script:
        - cd ../tests
        - bats integration
    - stage: tests
      name: "Robustness Tests"
      services: docker
      before_script:
        - pip3 install -r requirements.txt
        - git clone https://github.com/bats-core/bats-core.git
        - pushd bats-core && git checkout v1.1.0 && sudo ./install.sh /usr/local && popd
        - cd deploy
        - make -C images -j 2 pull-base pull-inbox
        - make prepare
        - make bootstrap ARGS="--keyserver ega"
        - sudo chown -R travis private
        - make up OMIT="--scale res=0"
        - make preflight-check
      script:
        - cd ../tests
        - bats robustness
    - stage: tests
      name: "Stress Tests"
      services: docker
      script: echo "Stress Tests.... hmm... later"
    - stage: tests
      name: "Security Tests"
      services: docker
      before_script:
        - pip3 install -r requirements.txt
        - git clone https://github.com/bats-core/bats-core.git
        - pushd bats-core && git checkout v1.1.0 && sudo ./install.sh /usr/local && popd
        - cd deploy
        - make -C images -j 2 pull-base pull-inbox
        - make prepare
        - make bootstrap ARGS="--keyserver ega"
        - sudo chown -R travis private
        - make up OMIT="--scale res=0"
        - make preflight-check
      script:
        - cd ../tests
        - bats security
    # Retagging the images
    - stage: images
      services: docker
      name: "Images Retag"
      before_script:
        - cd deploy/images
      script:
        - make -j 2 pull-base pull-inbox
        - make retag
        - make -j 2 push-base push-inbox
        - make clean-tag
    # #
    # # Old tests. Make them succeed with "|| :"
    # #
    # - stage: tests
    #   name: "Old Tests"
    #   before_script:
    #     - pip3 install -r requirements.txt
    #     - cd deploy
    #     - make prepare
    #     - make bootstrap ARGS='--inbox mina --keyserver ega'
    #     - sudo chown -R travis private
    #     - make up
    #     - docker-compose ps
    #   script:
    #     - cd tests
    #     - mvn test -Dtest=IngestionTests -B || echo 'Nope'
    #     - mvn test -Dtest=OutgestionTests -B || echo 'Nope'
    #     - mvn test -Dtest=RobustnessTests -B || echo 'Nope'

notifications:
  email: false
  slack:
    secure: eUyEWWvrFbzW+j+WKIOrHm7zeJ+6+o/WmI5cp1UYsOT9emxGE4kzW057cG9EV+sgKUdoYP1zSfCH0TLSOjY7otyqccqZH5WxDtiBSEXpkA8ID8jzQnX1VZWFn1vK+gWpER87VdLonVGt4db1lqE3Gm/uCbEqzrmfYjE1Hrk4PM8FfLQfD3+YBPUnWGSZKAPmdHAKh7IF9VQ6f1zaspijp/Sxa7Dk9F+Z4o2nsZ1woSyOVAwWLJhkvEafyEFfb/9tPMF1wtoXlLEzV1JDRzyjzbLGXQcpo6+Qx3+v7w6eRbriifOq2tByBfeI+RlWytwOgb+B/mfN0uFPbdg/Bgr//NMDrqwCnFQs7A2Dj287mQZI4YpRvh4Cneu3ReVGQKd9SJq28BliwXBBv3xyeFfGEbBOMNKb0VCsNjRuWITncf/qx3Vxn13VAYxcdA9EZpa1UzT6V94nlbLUq3twFKBJiDmpraYnI+JGFCZ32Xh8bySNqbEBe7TnqAG015c4pKKx++3IQJePfSPbRKzwWNAM5yG7RuVmud5fxfN+KdQz7vKfjOeaHKG4PScfhRT0zthtgmPG+m5eCprIbdFlacU3UyobLtxZd8wI9qJnGGvB3bHOsuaqpS2ymDWbd/n1aeryrcTkS/gPuwMvTs6S32pRf/orKqyLfnSZPeTcOevbzHw=
